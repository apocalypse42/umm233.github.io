<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seeno</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://umm.js.org/"/>
  <updated>2019-03-22T09:45:21.788Z</updated>
  <id>https://umm.js.org/</id>
  
  <author>
    <name>Seeno</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://umm.js.org/cjtjvtna3000vpc781q8elnlf/0/"/>
    <id>https://umm.js.org/cjtjvtna3000vpc781q8elnlf/0/</id>
    <published>2019-03-22T08:59:43.276Z</published>
    <updated>2019-03-22T09:45:21.788Z</updated>
    
    <content type="html"><![CDATA[{"cursor_size":"small","command_history_length":100,"num_history_buffers":4,"command_history_no_duplication":false,"quick_edit":true,"insert_mode":true,"load_console_IME":true,"font_face":"Sarasa Term SC","font_true_type":true,"font_size":"0x18","font_weight":0,"screen_buffer_size":"80x3000","window_size":"80x20","fullscreen":false,"popup_colors":"cyan,white","screen_colors":"white,black","black":"#1E1E1E","dark_blue":"#2472C8","dark_green":"#0DBC79","dark_cyan":"#11A8CD","dark_red":"#CD3131","dark_magenta":"#BC3FBC","dark_yellow":"#E5E510","gray":"#E5E5E5","dark_gray":"#666666","blue":"#3B8EEA","green":"#23D18B","cyan":"#29B8DB","red":"#F14C4C","magenta":"#D670D6","yellow":"#F5F543","white":"#E5E5E5"}]]></content>
    
    <summary type="html">
    
      
      
        {&quot;cursor_size&quot;:&quot;small&quot;,&quot;command_history_length&quot;:100,&quot;num_history_buffers&quot;:4,&quot;command_history_no_duplication&quot;:false,&quot;quick_edit&quot;:true,&quot;insert
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>oh-my-posh</title>
    <link href="https://umm.js.org/p/d67c16f7/"/>
    <id>https://umm.js.org/p/d67c16f7/</id>
    <published>2019-03-22T08:04:11.000Z</published>
    <updated>2019-03-22T09:45:21.792Z</updated>
    
    <content type="html"><![CDATA[<p>折腾一下PS的美化——oh my posh</p><a id="more"></a><h2 id="安装-scoop"><a href="#安装-scoop" class="headerlink" title="安装 scoop"></a>安装 scoop</h2><p>可参考<span class="exturl" data-url="aHR0cHM6Ly9zcGVuY2Vyd29vLmNvbS8=" title="https://spencerwoo.com/">@Spencer Woo<i class="fa fa-external-link"></i></span>的<span class="exturl" data-url="aHR0cHM6Ly9zcGVuY2Vyd29vLmNvbS9wb3N0cy8yMDE5LzAxLzEyL3Njb29wLmh0bWwjc2Nvb3AtJUU3JTlBJTg0JUU1JUFFJTg5JUU4JUEzJTg1JUU5JTg1JThEJUU3JUJEJUFF" title="https://spencerwoo.com/posts/2019/01/12/scoop.html#scoop-%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE">这篇文章<i class="fa fa-external-link"></i></span>，介绍了关于scoop的安装以，配置及使用</p><p>主要步骤：(使用powershell进行以下操作)</p><ol><li>允许本地脚本执行</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set-executionpolicy</span> remotesigned -scope currentuser</span><br></pre></td></tr></table></figure><ol start="2"><li>安装 Scoop</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iex (<span class="built_in">new-object</span> net.webclient).downloadstring(<span class="string">'https://get.scoop.sh'</span>)</span><br></pre></td></tr></table></figure><h2 id="安装-concfg"><a href="#安装-concfg" class="headerlink" title="安装 concfg"></a>安装 concfg</h2><p><code>concfg</code>可以用来导入和导出 Windows 控制台的设置<br>可通过Scoop进行安装，会自动配置好环境变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install concfg</span><br></pre></td></tr></table></figure><h2 id="安装-posh-git"><a href="#安装-posh-git" class="headerlink" title="安装 posh-git"></a>安装 posh-git</h2><p><code>posh-git</code> 是 <code>oh-my-posh</code> 的依赖，在 <code>scoop</code> 的 <code>extras</code> 包中。</p><ol><li>添加名为 <code>extras</code> 的 <code>bucket</code></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add extras</span><br></pre></td></tr></table></figure><ol start="2"><li>安装 <code>posh-git</code></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install posh-git</span><br></pre></td></tr></table></figure><h2 id="安装-oh-my-posh"><a href="#安装-oh-my-posh" class="headerlink" title="安装 oh my posh"></a>安装 oh my posh</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install oh-my-posh</span><br></pre></td></tr></table></figure><p>但是在没有设置<code>更纱字体 Team SC</code>之前，我的powershell的命令提示符会出现很奇怪的箭头（向上弯），估计是有一些字体不匹配，不能很好地显示出来。看着别扭，把更纱字体加到注册表中，以便修改powershell中的字体配置。</p><h3 id="字体配置"><a href="#字体配置" class="headerlink" title="字体配置"></a>字体配置</h3><ol><li>安装<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JlNWludmlzL1NhcmFzYS1Hb3RoaWM=" title="https://github.com/be5invis/Sarasa-Gothic">更纱字体<i class="fa fa-external-link"></i></span></li><li>修改注册表，在<code>HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Windows NT &gt;&gt; CurrentVersion &gt;&gt; Console &gt;&gt; TrueTypeFont</code>中添加一个字符串项目，内容为<code>Sarasa Term SC</code></li></ol><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Theme Agnoster</span><br></pre></td></tr></table></figure><h3 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h3><p>新建一个 <code>config.json</code> 文件，键入如下内容，根据个人需要自行修改，我的是<a href="https://umm.js.org/download/oh_my_posh/oh_my_posh_cfg.json">oh_my_posh_cfg.json</a></p><p>这里用的是<code>.json</code>文件，之前看了很多教程，用的是<code>.cfg</code>文件，然后我用的时候出现了<code>concfg: ERROR: couldn&#39;t load settings from xxx.cfg</code>这样的错误。</p><p>然后，我查了一下看到有人用<code>.json</code>文件在其他地方进行配置，我就试了一下，感人~<br>出现 <code>Console settings were imported from &#39;xxx.json&#39;</code>就说明导入配置成功。</p><img src="/p/d67c16f7/result.png" title="效果图"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXN6eS5jYy8yMDE4LzA1LzA2L2JlYXV0aWZ5LXBvd2Vyc2hlbGwv" title="https://www.iszy.cc/2018/05/06/beautify-powershell/">Powershell 美化 ——oh-my-posh<i class="fa fa-external-link"></i></span></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾一下PS的美化——oh my posh&lt;/p&gt;
    
    </summary>
    
    
      <category term="Software" scheme="https://umm.js.org/tags/Software/"/>
    
      <category term="Windows" scheme="https://umm.js.org/tags/Windows/"/>
    
      <category term="PowerShell" scheme="https://umm.js.org/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>简单整合Excel信息</title>
    <link href="https://umm.js.org/p/1ff69962/"/>
    <id>https://umm.js.org/p/1ff69962/</id>
    <published>2019-03-22T05:30:43.000Z</published>
    <updated>2019-03-22T08:00:52.663Z</updated>
    
    <content type="html"><![CDATA[<p>经常有许多信息分散在好几个Excel文件中，这时候人为进行查找整合就显得特别慢且累…</p><a id="more"></a><h2 id="OpenPyXl"><a href="#OpenPyXl" class="headerlink" title="OpenPyXl"></a>OpenPyXl</h2><p>在知乎上看了一下<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMzk5ODA4Mw==" title="https://zhuanlan.zhihu.com/p/23998083">Python-Excel 模块哪家强？<i class="fa fa-external-link"></i></span>，对于只是简单操作excel，还是<code>openpyxl</code>比较小巧方便，功能也比较全。</p><p>但只支持<code>.xlsx</code>格式，对于<code>.xls</code>格式的文件，不多的话，手动转换一下就好（另存为）。<br>参考文档：<span class="exturl" data-url="aHR0cHM6Ly9vcGVucHl4bC5yZWFkdGhlZG9jcy5pby9lbi9zdGFibGUvaW5kZXguaHRtbA==" title="https://openpyxl.readthedocs.io/en/stable/index.html">OpenPyXl<i class="fa fa-external-link"></i></span></p><blockquote><p>简单易用，功能广泛，单元格格式/图片/表格/公式/筛选/批注/文件保护等等功能应有尽有，图表功能是其一大亮点，缺点是对 VBA 支持的不够好。</p></blockquote><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><blockquote><p>Example:<br>在<code>ex1.xlsx</code>中sheet1的E列和H列分别是导师姓名以及所带多个学生的姓名（1对多）<br>在<code>ex2.xlsx</code>中shhet1的B列和F列分别是学生姓名以及待填的导师姓名（1对1）<br>现在要把学生所对应导师姓名对应填好</p></blockquote><img src="/p/1ff69962/test.png" title="图解"><p>如果只有5个人，那么查找，复制，粘贴就解决了，但是如果是50个人，那么效率就太低了…<br>解决这个问题，就是在<code>ex1</code>中查找到学生对应的导师姓名，然后写入<code>ex2</code>中，保存就好了。</p><ol><li>读取指定sheet内容</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> load_workbook</span><br><span class="line"></span><br><span class="line">wb = load_workbook(<span class="string">'ex1.xlsx'</span>) <span class="comment"># 加载xlsx内容</span></span><br><span class="line">sheet = wb.get_sheet_by_name(<span class="string">'sheet1'</span>) <span class="comment"># 找到需要操作的sheet</span></span><br></pre></td></tr></table></figure><ol start="2"><li>找到学生对应导师姓名</li></ol><p>因为导师和学生的姓名在同一行，通过<code>findTea</code>遍历各行找到该学生对应的导师姓名<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findTea</span><span class="params">(sheet, stuname)</span>:</span></span><br><span class="line">    teaNames = list(sheet[<span class="string">'E'</span>])</span><br><span class="line">    stuNames = list(sheet[<span class="string">'H'</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> stuname <span class="keyword">in</span> stuNames[i].value:</span><br><span class="line">            <span class="comment"># print(teaNames[i].value)</span></span><br><span class="line">            <span class="keyword">return</span> teaNames[i].value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><ol start="3"><li>将信息写入<code>ex2</code>对应位置并保存</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">35</span>):</span><br><span class="line">    stuname = stuNames2[i].value</span><br><span class="line">    teaname = findTea(sheet, stuname)</span><br><span class="line">    teaNames2[i].value = teaname</span><br></pre></td></tr></table></figure><p>保存修改后的excel (做了那么多，不保存对于没有😥)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb1.save(&apos;ex2.xlsx&apos;)</span><br></pre></td></tr></table></figure></p><h2 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h2><p>最近看到一个repo，作者的REMDME，我的想法大概也是吧。编程可以用于解决许多日常繁琐的问题，同时，最让我着迷的是，编程的创造，可以有无限可能，只要你想得到，基本上有办法实现。</p><p>Awosome!</p><blockquote><p>I do not consider myself a programmer. I create these little programs as experiments to play with the language, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient.</p><footer><strong>geekcomputers</strong><cite><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dlZWtjb21wdXRlcnMvUHl0aG9u" title="https://github.com/geekcomputers/Python">README<i class="fa fa-external-link"></i></span></cite></footer></blockquote><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常有许多信息分散在好几个Excel文件中，这时候人为进行查找整合就显得特别慢且累…&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://umm.js.org/categories/Python/"/>
    
    
      <category term="Python" scheme="https://umm.js.org/tags/Python/"/>
    
      <category term="Excel" scheme="https://umm.js.org/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title>GIF Compression</title>
    <link href="https://umm.js.org/p/e9fa3cd1/"/>
    <id>https://umm.js.org/p/e9fa3cd1/</id>
    <published>2019-02-27T13:27:58.000Z</published>
    <updated>2019-03-05T14:14:14.824Z</updated>
    
    <content type="html"><![CDATA[<p>日常看番看剧，遇到一些场景就喜欢录制gif保存下来，但每次制作出来都会出现gif过大的问题…<br>至于解决，稍微记录下…<del>(因为有的时候记不住，划掉划掉)</del></p><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>导致gif过大常见的原因大致以下几种：</p><ol><li>尺寸过大</li><li>帧率过大</li><li>图片的颜色</li><li>gif的时长</li></ol><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>主要从尺寸以及图片颜色上入手，至于帧率过大/gif过长则可以通过<code>ScreenToGif</code>这个软件适当删除一些重复的帧数等等。</p><h3 id="iloveimg"><a href="#iloveimg" class="headerlink" title="iloveimg"></a><span class="exturl" data-url="aHR0cHM6Ly93d3cuaWxvdmVpbWcuY29tL3poLWNuL2NvbXByZXNzLWltYWdlL2NvbXByZXNzLWdpZg==" title="https://www.iloveimg.com/zh-cn/compress-image/compress-gif">iloveimg<i class="fa fa-external-link"></i></span></h3><p>在线GIF压缩工具，上传图片，帮你压缩完后下载回来，简单粗暴。<br>效果还行，umm…就是有的时候上传速度感人罢了…</p><h3 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h3><p>项目地址及说明参考：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ltYWdlTWFnaWNrL0ltYWdlTWFnaWNr" title="https://github.com/ImageMagick/ImageMagick">https://github.com/ImageMagick/ImageMagick<i class="fa fa-external-link"></i></span></p><ol><li>降低GIF图像品质</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -quality 75% input.gif output.gif</span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>-quality 75%</code> 原图品质降为 75% 左右 (降太多可能会导致图像品质下降严重)<br>ps.umm有的时候效果并不明显</p><ol start="2"><li>缩小GIF尺寸</li></ol><p>减小GIF的图像尺寸应该是最简单粗暴的缩小GIF体积的方法。</p><ul><li>自定义尺寸大小</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 800x600 input.gif output.gif</span><br></pre></td></tr></table></figure><ul><li>原图像宽高缩小为原来的一半</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -sample 50%x50% input.gif output.gif</span><br></pre></td></tr></table></figure><ol start="3"><li>设置压缩比</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert test.gif -fuzz 15% -layers Optimize result.gif</span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>-fuzz</code>设置压缩率，压缩率不宜设置得太高，一半在5%~15%，具体根据图片压缩后的效果进行修改。</p><h3 id="Gifsicle"><a href="#Gifsicle" class="headerlink" title="Gifsicle"></a>Gifsicle</h3><p>项目地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tvaGxlci9naWZzaWNsZQ==" title="https://github.com/kohler/gifsicle">https://github.com/kohler/gifsicle<i class="fa fa-external-link"></i></span><br>使用参考：<span class="exturl" data-url="aHR0cDovL3d3dy5sY2RmLm9yZy9naWZzaWNsZS9tYW4uaHRtbA==" title="http://www.lcdf.org/gifsicle/man.html">http://www.lcdf.org/gifsicle/man.html<i class="fa fa-external-link"></i></span></p><ol><li>根据图像自动优化</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gifsicle -O3 input.gif -o output.gif</span><br></pre></td></tr></table></figure><p>参数说明:</p><p><strong>-O</strong>[<em>level</em>]</p><ul><li><code>-O1</code> 仅存储每个图像的更改部分。 这是默认值。</li><li><code>-O2</code> 使用透明度进一步缩小文件。</li><li><code>-O3</code> 尝试几种优化方法（通常较慢，有时更好的结果）。</li></ul><ol start="2"><li>缩小图像尺寸</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gifsicle -i input.gif --scale 0.5 -o output.gif</span><br><span class="line">gifsicle input.gif --resize 300x200 -o output.gif</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>--scale 0.5</code> 指的是缩小图像宽高为原来的一半</li><li><code>resize 300x200</code> 自定义图片伸缩尺寸</li></ul><ol start="3"><li>减少图片颜色</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gifsicle -O3 input.gif -o output.gif --colors num</span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>--color num</code>: 将每个输出GIF中不同颜色的数量减少到num或更少。 num必须介于2到256之间。这可用于缩小输出GIF或消除任何本地颜色表。num越小，图片质量损失度越大。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常看番看剧，遇到一些场景就喜欢录制gif保存下来，但每次制作出来都会出现gif过大的问题…&lt;br&gt;至于解决，稍微记录下…&lt;del&gt;(因为有的时候记不住，划掉划掉)&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="图像处理" scheme="https://umm.js.org/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="Image" scheme="https://umm.js.org/tags/Image/"/>
    
      <category term="Compress" scheme="https://umm.js.org/tags/Compress/"/>
    
  </entry>
  
  <entry>
    <title>git中关于CRLF的Warning</title>
    <link href="https://umm.js.org/p/a91d33b/"/>
    <id>https://umm.js.org/p/a91d33b/</id>
    <published>2019-02-09T16:09:53.000Z</published>
    <updated>2019-02-09T16:29:33.335Z</updated>
    
    <content type="html"><![CDATA[<p><code>hexo d</code>出现<code>warning: LF will be replaced by CRLF</code></p><a id="more"></a><h2 id="关于CRLF"><a href="#关于CRLF" class="headerlink" title="关于CRLF"></a><span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JThGJTlCJUU4JUExJThD" title="https://zh.wikipedia.org/wiki/%E6%8F%9B%E8%A1%8C">关于CRLF<i class="fa fa-external-link"></i></span></h2><p>引用维基百科：</p><p>以<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvQVNDSUk=" title="ASCII">ASCII<i class="fa fa-external-link"></i></span>为基础的或兼容的字符集使用分别LF（Line feed，U+000A）或<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JTlCJTlFJUU4JUJEJUE2JUU3JUFDJUE2" title="回车符">CR<i class="fa fa-external-link"></i></span>（Carriage Return，U+000D）或CR+LF；下面列出各系统换行字符编码的列表</p><ul><li>LF：在<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvVW5peA==" title="Unix">Unix<i class="fa fa-external-link"></i></span>或Unix兼容系统（GNU/Linux，AIX，Xenix，Mac OS X，…）、BeOS、Amiga、RISC OS</li><li>CR+LF：<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvRE9T" title="DOS">DOS<i class="fa fa-external-link"></i></span>（<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvTVMtRE9T" title="MS-DOS">MS-DOS<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvUEMtRE9T" title="PC-DOS">PC-DOS<i class="fa fa-external-link"></i></span>等）、<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JUJFJUFFJUU4JUJCJTlG" title="微软">微软<i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUE2JTk2JUU3JUFBJTk3JUU0JUJEJTlDJUU2JUE1JUFEJUU3JUIzJUJCJUU3JUI1JUIx" title="视窗操作系统">视窗操作系统<i class="fa fa-external-link"></i></span>（Microsoft Windows）、大部分非Unix的系统</li><li>CR：Apple II家族，<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvTWFjX09T" title="Mac OS">Mac OS<i class="fa fa-external-link"></i></span>至版本9</li></ul><h2 id="关闭warning显示"><a href="#关闭warning显示" class="headerlink" title="关闭warning显示"></a>关闭warning显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">false表示取消自动转换功能。适合纯Windows</span><br><span class="line">true表示提交代码时把CRLF转换成LF，导出时LF转换成CRLF。适合多平台协作</span><br><span class="line">input表示提交时把CRLF转换成LF，导出时不转换。适合纯Linux或Mac</span><br></pre></td></tr></table></figure><p>以前懒得改，后面越看越难受，干脆改一下，没有出现几十行warning··· ···</p><p>舒服了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;hexo d&lt;/code&gt;出现&lt;code&gt;warning: LF will be replaced by CRLF&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://umm.js.org/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://umm.js.org/tags/Hexo/"/>
    
      <category term="Git" scheme="https://umm.js.org/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Blog back up</title>
    <link href="https://umm.js.org/p/cbef7cfa/"/>
    <id>https://umm.js.org/p/cbef7cfa/</id>
    <published>2019-02-09T13:15:28.000Z</published>
    <updated>2019-02-09T16:06:14.054Z</updated>
    
    <content type="html"><![CDATA[<p>博客备份，将写作分支和站点部署分支分开。</p><blockquote><p>Hexo官方推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。</p></blockquote><a id="more"></a><h2 id="直接使用Git备份"><a href="#直接使用Git备份" class="headerlink" title="直接使用Git备份"></a>直接使用Git备份</h2><ol><li>在Github上新建一个<code>repository</code>或者新建一个分支用于存放备份文件</li><li>命令行切换目录到待上传文件夹，执行<code>git init</code>初始化本地仓库</li><li><code>git add .</code>添加所有变化文件以及新文件</li><li><code>git commit -m &#39;blah&#39;</code>提交修改说明</li><li><code>git remote add origin git@server-name:path/repo-name.git</code>关联远程库<img src="/p/cbef7cfa/ssh-address.png" title="远程仓库地址"></li><li>第一次使用<code>push</code>将本地文件同步到远程仓库使用<code>git push -u origin master</code>，此后，使用<code>git push origin master</code>进行同步。</li></ol><p>这样就完成创建及上传本地仓库。此后日常更新备份，同步修改：</p><ol><li><code>git add .</code></li><li><code>git commit -m &#39;blah&#39;</code></li><li><code>git push origin master</code></li></ol><blockquote><p>显示<code>INFO  Deploy done: git</code>表示上传成功</p></blockquote><h2 id="使用hexo插件实现"><a href="#使用hexo插件实现" class="headerlink" title="使用hexo插件实现"></a>使用hexo插件实现</h2><p>插件：<code>hexo-git-backup</code></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>如果hexo版本是2.x.x，则使用<code>npm install hexo-git-backup@0.0.91 --save</code><br>如果hexo版本是3.x.x，则使用<code>npm install hexo-git-backup --save</code></p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>如果之前使用<code>--save</code>安装过<code>hexo-git-backup</code>，要先删除已安装插件<code>hexo-git-backup</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm remove hexo-git-backup</span><br><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure></p><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>在站点配置文件<code>_config.yml</code>中添加如下设置，可参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbmV5Y29kZS9oZXhvLWdpdC1iYWNrdXAvYmxvYi9tYXN0ZXIvUkVBRE1FLm1k" title="https://github.com/coneycode/hexo-git-backup/blob/master/README.md">README<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">backup:</span><br><span class="line">    type: git</span><br><span class="line">    repository:</span><br><span class="line">       github: git@github.com:xxx/xxx.git,branchName</span><br><span class="line">       gitcafe: git@github.com:xxx/xxx.git,branchName</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo backup </span><br><span class="line">或者 hexo b</span><br></pre></td></tr></table></figure><h3 id="可选项"><a href="#可选项" class="headerlink" title="可选项"></a>可选项</h3><ol><li>备份主题：<code>theme: your theme name</code></li><li>commit message: <code>message: update xxx</code></li></ol><p>such as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">backup:</span><br><span class="line">    type: git</span><br><span class="line">    message: update xxx</span><br><span class="line">    repository:</span><br><span class="line">       github: git@github.com:xxx/xxx.git,branchName</span><br><span class="line">       gitcafe: git@github.com:xxx/xxx.git,branchName</span><br></pre></td></tr></table></figure><blockquote><p><strong>Attention: if you do as above, the dir <code>themes/coney/.git</code>will be removed</strong></p></blockquote><h3 id="已知存在的问题"><a href="#已知存在的问题" class="headerlink" title="已知存在的问题"></a>已知存在的问题</h3><blockquote><p>You may get some troubles by your computer’ permission。</p></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><h2 id="我遇到的问题"><a href="#我遇到的问题" class="headerlink" title="我遇到的问题"></a>我遇到的问题</h2><h3 id="之前已存在git版本库"><a href="#之前已存在git版本库" class="headerlink" title="之前已存在git版本库"></a>之前已存在git版本库</h3><p>在很久远的过去（具体我忘了），刚开始学搭博客的时候，瞎**玩（前人养虫，后人除虫😭）。</p><p>在文件夹下已存在了git版本库，然后我想，那就换它的上一级文件夹同步，上一级文件夹没有git版本库，这样就避免版本库冲突，但是，问题来了，上传是上传了，但是变成一个假的文件夹(如图)，然后开始除虫😭。</p><img src="/p/cbef7cfa/false-folder.png" class="false folder"><p>问题：文件夹中包含其他仓库使得上传文件夹出现问题。</p><p>解决的办法：</p><p>删除该文件夹下的git版本库：<code>git rm -r -f --cached 文件夹路径</code>(记得带–cached，删缓存，不然就是删库GG)<br>或者：直接删除其中的<code>.git</code> 文件，一般都是隐藏的（windows下）</p><h3 id="安装插件出现出现warning"><a href="#安装插件出现出现warning" class="headerlink" title="安装插件出现出现warning"></a>安装插件出现出现warning</h3><blockquote><p>found 3 vulnerabilities (1 low, 2 high)<br>run <code>npm audit fix</code> to fix them, or <code>npm audit</code> for details</p></blockquote><p>然后我run <code>npm audit fix</code> 但是没有fix显示<code>3 vulnerabilities require manual review. See the full report for details.</code></p><p>然后去查了一下：在一个issue下看到类似的问题，然后说是：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RJWWdvZC9SU1NIdWIvaXNzdWVzLzI2Mg==" title="https://github.com/DIYgod/RSSHub/issues/262"><code>这些是依赖的个别库的依赖的个别库版本过低导致的，可以无视</code><i class="fa fa-external-link"></i></span></p><p>虚惊一场···</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客备份，将写作分支和站点部署分支分开。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo官方推荐的方式是把master作为写作分支，另外使用public分支作为部署分支。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://umm.js.org/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://umm.js.org/tags/Hexo/"/>
    
      <category term="Git" scheme="https://umm.js.org/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Update NexT</title>
    <link href="https://umm.js.org/p/b601309c/"/>
    <id>https://umm.js.org/p/b601309c/</id>
    <published>2019-02-05T05:30:13.000Z</published>
    <updated>2019-02-10T11:46:10.006Z</updated>
    
    <content type="html"><![CDATA[<p>刚发现自己用的是NexT v5.1.4，枯了…<br>更新后直接是v7.0.0，好用多了/鬼脸</p><a id="more"></a><h2 id="NexT版本更新说明"><a href="#NexT版本更新说明" class="headerlink" title="NexT版本更新说明"></a>NexT版本更新说明</h2><p>稍微了解一下，以下说明来自参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL2RvY3MvemgtQ04vVVBEQVRFLUZST00tNS4xLlgubWQ=" title="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/UPDATE-FROM-5.1.X.md">官方文档<i class="fa fa-external-link"></i></span></p><p>在 5.1.x 版本和 6.0.x 版本之间没有很大的革命性改进。主版本号变更至 6 主要是因为：</p><ol><li>主仓库已从 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0" title="https://github.com/iissnan/hexo-theme-next">iissnan 名下<i class="fa fa-external-link"></i></span> 迁移至 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQ=" title="https://github.com/theme-next">theme-next<i class="fa fa-external-link"></i></span> 组织。</li><li><code>next/source/lib</code> 目录下的绝大多数库被移出到了 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQ=" title="https://github.com/theme-next">NexT 组织的外部仓库<i class="fa fa-external-link"></i></span>中。</li><li>第三方插件 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbGxpbi9oZXhvLXdvcmRjb3VudA==" title="https://github.com/willin/hexo-wordcount"><code>hexo-wordcount</code><i class="fa fa-external-link"></i></span> 被 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=" title="https://github.com/theme-next/hexo-symbols-count-time"><code>hexo-symbols-count-time</code><i class="fa fa-external-link"></i></span> 所取代，因为 <code>hexo-symbols-count-time</code> 没有任何外部 nodejs 依赖、也没有会导致生成站点时的性能问题 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbGxpbi9oZXhvLXdvcmRjb3VudC9pc3N1ZXMvNw==" title="https://github.com/willin/hexo-wordcount/issues/7">language filter<i class="fa fa-external-link"></i></span>。</li></ol><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>其实说更新，实际上就是新建一个博客主题。一下引自官方迁移文档 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL2RvY3MvemgtQ04vVVBEQVRFLUZST00tNS4xLlgubWQ=" title="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/UPDATE-FROM-5.1.X.md">UPDATE-FROM-5.1.X.md<i class="fa fa-external-link"></i></span></p><ol><li>克隆新的 v6.x 仓库到任一异于 <code>next</code> 的目录（如 <code>next-reloaded</code>）：</li></ol><p><code>$ git clone https://github.com/theme-next/hexo-theme-next themes/next-reloaded</code></p><ol start="2"><li><p>在 Hexo 的主配置文件中设置主题：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next-reloaded</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure></li><li><p>更新语言配置</p><p> 从 v6.0.3版本起，<code>zh-Hans</code>改名为<code>zh-CN</code>：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3JlbGVhc2VzL3RhZy92Ni4wLjM=" title="https://github.com/theme-next/hexo-theme-next/releases/tag/v6.0.3">https://github.com/theme-next/hexo-theme-next/releases/tag/v6.0.3<i class="fa fa-external-link"></i></span></p><p> 升级到v6.0.3及以后版本的用户，需要显式修改<code>_config.xml</code>里的language配置，否则语言显示不正确。</p></li></ol><p>关于第三方库的启用，参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL2RvY3MvemgtQ04vSU5TVEFMTEFUSU9OLm1kI+aPkuS7tg==" title="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/INSTALLATION.md#插件">这里<i class="fa fa-external-link"></i></span>。</p><h2 id="配置NexT"><a href="#配置NexT" class="headerlink" title="配置NexT"></a>配置NexT</h2><p>更新前，配置主题大部分要去下相关插件去修改对应的文件，很麻烦。<br>更新后，大部分功能内置，只需要根据个人喜好打开相应功能开关，即 <code>false</code> -&gt; <code>true</code>。</p><p>eg.<br>字数统计: 修改 <code>symbols_count_time</code>下的选项<br>标签图标: 修改<code>favicon</code>下的选项<br>博客页脚: 修改<code>footer</code>下的选项</p><p>NexT的配置文件<code>_config.yml</code>里有大量的注释，以及各插件/第三方库的开源地址，查看其<code>readme</code>（也很详细），然后自己跟着动手配置就ok了。</p><p>要注意的是，一些插件/第三方库并没有预置，要自己安装。否则，可能在预览站点的时候可能因为使用了第三方库的某些功能，但却未添加该库使得站点无法加载完全/失败。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>NexT折腾啊折腾，刚开始用v5.1.x折腾好久，而更新后，折腾一两个小时就配置好，舒服舒服🙃🙃🙃</p><blockquote class="blockquote-center"><p>新年快乐~<br>——2019.02.05</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚发现自己用的是NexT v5.1.4，枯了…&lt;br&gt;更新后直接是v7.0.0，好用多了/鬼脸&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://umm.js.org/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://umm.js.org/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://umm.js.org/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo writing</title>
    <link href="https://umm.js.org/p/cb3898/"/>
    <id>https://umm.js.org/p/cb3898/</id>
    <published>2019-02-02T11:44:42.000Z</published>
    <updated>2019-03-07T08:45:51.160Z</updated>
    
    <content type="html"><![CDATA[<p>关于Hexo写作的一些笔记。</p><a id="more"></a><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><blockquote><p>Hexo内主要使用Markdown进行写作。</p></blockquote><p>关于Markdown的语法，这里就记录一些常用的。</p><ul><li>n级标题  <code>n*#</code>   eg. 二级标题 ## blah</li><li>删除线  <code>~~blah~~</code> -&gt; <del>blah</del></li><li>加粗  <code>**blah**</code> -&gt; <strong>blah</strong></li><li>斜体  <code>*blah*</code> -&gt; <em>blah</em></li><li>短代码段 `blah`<br>效果：  <code>blah</code></li><li>多行代码段<br>```<br>blah<br>blah<br>blah<br>```</li></ul><p>效果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">blah</span><br><span class="line">blah</span><br><span class="line">blah</span><br></pre></td></tr></table></figure></p><h2 id="特殊语法-内置标签"><a href="#特殊语法-内置标签" class="headerlink" title="特殊语法(内置标签)"></a>特殊语法(内置标签)</h2><blockquote><p>「标签」(Tag Plugin) 是 Hexo 提供的一种快速生成特定内容的方式。</p></blockquote><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img filename picname %&#125;</span><br><span class="line">eg.&#123;% asset_img test.png test %&#125;</span><br></pre></td></tr></table></figure><p>效果如下:<br><img src="/p/cb3898/test.png" title="test"></p><h3 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% code 附加说明 link title %&#125;</span><br><span class="line">code blah blah</span><br><span class="line">&#123;% endcode %&#125;</span><br><span class="line"></span><br><span class="line">eg</span><br><span class="line">&#123;% code 此为附加说明 https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97 标签插件（Tag Plugins）%&#125;</span><br><span class="line">code code blah blah</span><br><span class="line">&#123;% endcode %&#125;</span><br></pre></td></tr></table></figure><p>效果如下:<br><figure class="highlight plain"><figcaption><span>此为附加说明</span><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvdGFnLXBsdWdpbnMjJUU0JUJCJUEzJUU3JUEwJTgxJUU1JTlEJTk3" title="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">标签插件（Tag Plugins）<i class="fa fa-external-link"></i></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code code blah blah</span><br></pre></td></tr></table></figure></p><h3 id="引用（别名：quote）"><a href="#引用（别名：quote）" class="headerlink" title="引用（别名：quote）"></a>引用（别名：quote）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% quote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endquote %&#125;</span><br><span class="line"></span><br><span class="line">eg. 引用书上的句子</span><br><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br><span class="line"></span><br><span class="line">eg. 引用文本加链接</span><br><span class="line">&#123;% quote 沃斯基·索德 https://music.163.com/#/mv?id=29689 A Thousand Years %&#125;</span><br><span class="line">It is a test. Link is a MV.</span><br><span class="line">&#123;% endquote %&#125;</span><br></pre></td></tr></table></figure><p>效果如下:<br>eg. 引用书上的句子<br><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote></p><p>eg. 引用文本加链接<br><blockquote><p>It is a test. Link is a MV.</p><footer><strong>沃斯基·索德</strong><cite><span class="exturl" data-url="aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvbXY/aWQ9Mjk2ODk=" title="https://music.163.com/#/mv?id=29689">A Thousand Years<i class="fa fa-external-link"></i></span></cite></footer></blockquote></p><h3 id="居中引用"><a href="#居中引用" class="headerlink" title="居中引用"></a>居中引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125; </span><br><span class="line">blah blah blah </span><br><span class="line">——沃斯基·索德</span><br><span class="line">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote class="blockquote-center"><p>blah blah blah<br>——沃斯基·索德</p></blockquote><h3 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125; </span><br><span class="line">Content (md partial supported) </span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">class name:</span><br><span class="line">*   `default`</span><br><span class="line">*   `primary`</span><br><span class="line">*   `success`</span><br><span class="line">*   `info`</span><br><span class="line">*   `warning`</span><br><span class="line">*   `danger`</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>primary</li></ol><div class="note primary">            <p>Content (md partial supported) </p>          </div><ol start="2"><li>success</li></ol><div class="note success">            <p>Content (md partial supported) </p>          </div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p><code>&lt;u&gt;blah&lt;/u&gt;</code> -&gt; <u>blah</u></p><h3 id="跳转页面"><a href="#跳转页面" class="headerlink" title="跳转页面"></a>跳转页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[使用Markdown语法增加的跳转到“前言”的链接](#Markdown语法)</span><br></pre></td></tr></table></figure><p>效果：<a href="#Markdown语法">跳转到文章”Markdown语法”标题处</a></p><h3 id="Read-More"><a href="#Read-More" class="headerlink" title="Read More"></a>Read More</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h3 id="文字链接"><a href="#文字链接" class="headerlink" title="文字链接"></a>文字链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[title](link)</span><br><span class="line"></span><br><span class="line">eg.</span><br><span class="line">`[Hexo官方教程](https://hexo.io/zh-cn/docs/tag-plugins)`</span><br></pre></td></tr></table></figure><p>效果如下:<br><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvdGFnLXBsdWdpbnM=" title="https://hexo.io/zh-cn/docs/tag-plugins">Hexo官方教程<i class="fa fa-external-link"></i></span></p><h3 id="嵌入Youtube视频"><a href="#嵌入Youtube视频" class="headerlink" title="嵌入Youtube视频"></a>嵌入Youtube视频</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video_id %&#125;</span><br><span class="line">eg. &#123;% youtube rtOvBOTyX00 %&#125;</span><br></pre></td></tr></table></figure><p>效果如下:<br><div class="video-container"><iframe src="//www.youtube.com/embed/rtOvBOTyX00" frameborder="0" allowfullscreen></iframe></div></p><p>效果图:<br><img src="/p/cb3898/youtube-pic.png" title="看不到视频看效果图"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>以上这些对于日常写作基本够用，后面需要什么再学，再记录，持续更新。</p><p>ps. 今年时间进度 ▓░░░░░░░░░░░░░░ 9%</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvdGFnLXBsdWdpbnMjaWZyYW1l" title="https://hexo.io/zh-cn/docs/tag-plugins#iframe">Hexo tag-plugins教程<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lmlpc3NuYW4uY29tL3RhZy1wbHVnaW5zLmh0bWw=" title="https://theme-next.iissnan.com/tag-plugins.html">NexT tag-plugins教程<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于Hexo写作的一些笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://umm.js.org/categories/Hexo/"/>
    
    
      <category term="Note" scheme="https://umm.js.org/tags/Note/"/>
    
      <category term="Hexo" scheme="https://umm.js.org/tags/Hexo/"/>
    
      <category term="Writing" scheme="https://umm.js.org/tags/Writing/"/>
    
  </entry>
  
  <entry>
    <title>爬取探书FM-每天听本书</title>
    <link href="https://umm.js.org/p/e09d667/"/>
    <id>https://umm.js.org/p/e09d667/</id>
    <published>2019-01-11T14:00:38.000Z</published>
    <updated>2019-03-22T09:11:22.513Z</updated>
    
    <content type="html"><![CDATA[<p>闲的…刚好想听听书，初略了解一下整书内容，或是听听以前看过的书，了解一下别人对这本书的理解及看法。<br>看到有人推荐探书FM，一天一书，还行。<br>ps.「得到」也有一个栏目叫「每天听本书」，可是只能付费，so…<br>其实就是闲着想写个爬虫练练手而已。</p><a id="more"></a><h2 id="查找api"><a href="#查找api" class="headerlink" title="查找api"></a>查找api</h2><p>通过浏览器审查元素获取该页面的<code>webapi</code></p><blockquote><p>具体就是<code>F12</code>-&gt; <code>Network</code> -&gt;<code>刷新页面</code></p></blockquote><p>得到webapi，api查询返回数据中的dataList中存放者音频数据，包括文件名，各种格式音频链接，有mp3，aac等格式。</p><p>api链接：<span class="exturl" data-url="aHR0cDovL3d3dy50aW5nYmFuLmNuL3dlYmFwaS9hdWRpb3MvbGlzdD9pZD0xMTAwMDAxNDc1Nzc2JmFtcDtwYWdlc2l6ZT0yMCZhbXA7cGFnZW51bT17cGFnZW51bX0mYW1wO3NvcnR0eXBlPTE=" title="http://www.tingban.cn/webapi/audios/list?id=1100001475776&amp;pagesize=20&amp;pagenum={pagenum}&amp;sorttype=1">http://www.tingban.cn/webapi/audios/list?id=1100001475776&amp;pagesize=20&amp;pagenum={pagenum}&amp;sorttype=1<i class="fa fa-external-link"></i></span></p><blockquote><p>pagenum 页数<br>pagesize 每页返回音频数（可修改，在0-50之间）</p></blockquote><img src="/p/e09d667/api页面.png" title="api页面"><h2 id="获取音频名及链接"><a href="#获取音频名及链接" class="headerlink" title="获取音频名及链接"></a>获取音频名及链接</h2><p>这里建立一个字典用于存放音频(key)和对应的链接(value)<br>对返回的json数据进行处理即可。（有api就是很舒服的一件事）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">data_json</span><span class="params">(resp)</span>:</span> <span class="comment"># resp为请求页面返回的响应(respond)</span></span><br><span class="line">    url_single_list = []</span><br><span class="line">    audioName_list = []</span><br><span class="line">    download_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> resp.text: <span class="comment"># 页面有数据才进行操作</span></span><br><span class="line">        url_fmdata = resp.content.decode(<span class="string">'utf-8'</span>) <span class="comment"># 对返回数据进行utf-8编码</span></span><br><span class="line">        result = json.loads(url_fmdata).get(<span class="string">"result"</span>)</span><br><span class="line">        <span class="comment"># print(type(result))</span></span><br><span class="line">        dataList = result[<span class="string">"dataList"</span>] <span class="comment"># 所有音频数据</span></span><br><span class="line">        <span class="comment"># print(len(dataList))</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> dataList:</span><br><span class="line">            url_single = data[<span class="string">'aacPlayUrl'</span>] <span class="comment"># 这里下载aac文件，因为小</span></span><br><span class="line">            audioName = data[<span class="string">"audioName"</span>]</span><br><span class="line">            <span class="comment"># print(url_single)</span></span><br><span class="line">            <span class="comment"># print(audioName)</span></span><br><span class="line">            url_single_list.append(url_single)</span><br><span class="line">            audioName_list.append(audioName)</span><br><span class="line">        single_data = zip(audioName_list, url_single_list)</span><br><span class="line">        download_dict.update(single_data) <span class="comment"># 获得此页面音频名及链接</span></span><br><span class="line">        <span class="comment"># print(download_dict)</span></span><br><span class="line">        <span class="keyword">return</span> download_dict</span><br></pre></td></tr></table></figure><h2 id="多线程下载音频"><a href="#多线程下载音频" class="headerlink" title="多线程下载音频"></a>多线程下载音频</h2><blockquote><p>通过多线程下载可提高下载速率。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">thread_lock = threading.BoundedSemaphore(value = <span class="number">5</span>) <span class="comment"># 设置5个线程</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_mp3</span><span class="params">(url,download_name,n)</span>:</span></span><br><span class="line">    path = <span class="string">'fm-mp3/'</span>+ download_name + url[<span class="number">-4</span>:]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path): <span class="comment"># 防止程序中断后覆盖下载</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.content)</span><br><span class="line">    thread_lock.release()  <span class="comment"># 下载完解锁</span></span><br><span class="line">    print(<span class="string">"%d is ok"</span> %n)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    download_list_all = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> page_num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">15</span>): <span class="comment"># max = 14 # 在pagesize=20的情况下一共14页数据</span></span><br><span class="line">        url = <span class="string">"http://www.tingban.cn/webapi/audios/list?id=1100001475776&amp;pagesize=20&amp;pagenum=&#123;i&#125;&amp;sorttype=1"</span>.format(i=page_num) <span class="comment"># 设置api链接，修改页数，这里默认20，最大可修改为50</span></span><br><span class="line">        resp = get_html(url)</span><br><span class="line">        url_list = data_json(resp)</span><br><span class="line">        <span class="comment"># print(url_list)</span></span><br><span class="line">        download_list_all.update(url_list)</span><br><span class="line">    <span class="comment"># print(download_list_all)</span></span><br><span class="line">    all_url_name = list(download_list_all.keys()) <span class="comment"># 所有的文件名，type：list</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(all_url_name)):</span><br><span class="line">        download_name = all_url_name[n]</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        url = download_list_all[download_name] <span class="comment"># 待下载的音频链接</span></span><br><span class="line">        print(<span class="string">'download &#123;&#125;'</span>.format(download_name))</span><br><span class="line">        path = <span class="string">'fm-mp3/'</span>+ download_name + url[<span class="number">-4</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            thread_lock.acquire()</span><br><span class="line">            t = threading.Thread(target = download_mp3,args = (url,download_name,n))</span><br><span class="line">            t.start()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"%d is ok"</span> %n)</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>基本思路：音频url-&gt;下载音频<br>url：通过api获得,整理成字典以便下载<br>下载：通过多线程提高下载速度<br>ps.通过判断文件是否存在实现「伪·断点下载」</p><p>完整程序：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3VtbTIzMy9UYW5zaHVGTS1TcGlkZXIvYmxvYi9tYXN0ZXIvZ2V0X2ZtLnB5" title="https://github.com/umm233/TanshuFM-Spider/blob/master/get_fm.py">探书FM爬虫<i class="fa fa-external-link"></i></span></p><blockquote><p>说起来整个程序也就是在做这两件事，看起来很简单，但实际真的动手写会遇到一些问题，基本上是基础知识方面，久不用就会忘记忽略。</p><p>对于页数可以稍微优化成通过判断<br>数据是否为寇空来判断是否到尾页</p></blockquote><h2 id="今年时间进度"><a href="#今年时间进度" class="headerlink" title="今年时间进度"></a>今年时间进度</h2><p>今年还剩下 353 天   ░░░░░░░░░░░░░░░   3%</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;闲的…刚好想听听书，初略了解一下整书内容，或是听听以前看过的书，了解一下别人对这本书的理解及看法。&lt;br&gt;看到有人推荐探书FM，一天一书，还行。&lt;br&gt;ps.「得到」也有一个栏目叫「每天听本书」，可是只能付费，so…&lt;br&gt;其实就是闲着想写个爬虫练练手而已。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://umm.js.org/categories/Python/"/>
    
    
      <category term="Python" scheme="https://umm.js.org/tags/Python/"/>
    
      <category term="Spider" scheme="https://umm.js.org/tags/Spider/"/>
    
  </entry>
  
  <entry>
    <title>8102的最后一天</title>
    <link href="https://umm.js.org/p/6ad40d1c/"/>
    <id>https://umm.js.org/p/6ad40d1c/</id>
    <published>2018-12-31T04:14:00.000Z</published>
    <updated>2019-03-06T12:33:42.417Z</updated>
    
    <content type="html"><![CDATA[<p>今年也许是大学里最开心的一年，也是相对充实的一年。</p><a id="more"></a><h2 id="今年最佳"><a href="#今年最佳" class="headerlink" title="今年最佳"></a>今年最佳</h2><blockquote><p>8.23 国赛</p></blockquote><p>当时准备国赛，和队友熬了好多夜，苦不堪言。现在回忆起来，蛮感谢队友们一直坚持下去。（还有点怀念那段时光…orz</p><blockquote><p>10.1~10.7 同学叙旧</p></blockquote><p>国庆期间见了好几个高中同学，毕业后就很少见到了。国庆那会儿跑去找他们玩，一起瞎逛，聊天，互相吐槽，爆以前黑料等等，属于见了面就“嫌弃”…但，还是很亲切。</p><blockquote><p>12月 – 万万没想到</p></blockquote><p>今年的生日赶巧和另外一个同学一起过，是大学里非常佩服的一个人，感觉很神奇！那天晚上很开心，帮我们一起过生日的女孩子事后跟我说，我晚上笑的很开心😂。</p><p>嗯，是很开心了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年也许是大学里最开心的一年，也是相对充实的一年。&lt;/p&gt;
    
    </summary>
    
      <category term="随想" scheme="https://umm.js.org/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="Note" scheme="https://umm.js.org/tags/Note/"/>
    
  </entry>
  
</feed>
